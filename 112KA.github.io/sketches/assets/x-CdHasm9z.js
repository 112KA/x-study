function c(e){if(e==null)throw new Error(`Expected 'value' to be defined, but received:${e}: ${typeof e})`)}var d=e=>{throw TypeError(e)},o=(e,t,i)=>t.has(e)||d("Cannot "+i),n=(e,t,i)=>(o(e,t,"read from private field"),i?i.call(e):t.get(e)),m=(e,t,i)=>t.has(e)?d("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,i),v=(e,t,i,r)=>(o(e,t,"write to private field"),t.set(e,i),i),s;class p{constructor(){m(this,s),v(this,s,t=>{throw new Error("no promised deferred!")}),this.resolve=n(this,s),this.reject=n(this,s)}clear(){this.resolve=n(this,s),this.reject=n(this,s)}promise(){return new Promise((t,i)=>{this.resolve=t,this.reject=i})}get isCreatedPromise(){return this.resolve!==n(this,s)}}s=new WeakMap;function u(e){return new Promise(t=>{setTimeout(t,e)})}class l extends EventTarget{constructor(t=600,i=1025){super(),this._mediaQueryMap=new Map,this.deviceSize="sm",this._onChange=r=>{const a=this._mediaQueryMap.get(r.media);c(a),this.deviceSize=r.matches?a[1]:a[0],this.dispatchEvent(new CustomEvent("change",{detail:{deviceSize:this.deviceSize}}))},this._mediaQueryMap.set(`(min-width: ${t}px)`,["sm","md"]),this._mediaQueryMap.set(`(min-width: ${i}px)`,["md","lg"]),this._mediaQueryMap.forEach(([,r],a)=>{const h=window.matchMedia(a);h.addEventListener("change",this._onChange),h.matches&&(this.deviceSize=r)}),this.deviceSize===void 0&&(this.deviceSize="sm")}}export{u as a,l as c,c as n,p as u};
